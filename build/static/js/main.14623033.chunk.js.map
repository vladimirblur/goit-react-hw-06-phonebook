{"version":3,"sources":["components/Filter/Filter.module.css","components/ContactList/ContactList.module.css","components/Container/Container.module.css","redux/contacts/contacts-actions.js","redux/contacts/contacts-reducer.js","redux/store.js","components/Container/Container.js","redux/contacts/contacts-selectors.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/ContactList.js","App.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","addContact","createAction","contact","payload","id","uuidv4","deleteContact","contactId","filterChange","filter","items","createReducer","state","_","contactReducer","combineReducers","persistConfigContacts","key","storage","blacklist","store","configureStore","reducer","contacts","persistReducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","devTools","process","persistor","persistStore","Container","children","className","s","container","getContacts","getFilter","ContactForm","useState","name","setName","number","setNumber","nameInputID","numberInputID","useSelector","dispatch","useDispatch","handleInputChange","e","currentTarget","value","onSubmit","preventDefault","find","alert","Form","htmlFor","label","input","type","onChange","pattern","title","required","Filter","filterId","target","ContactList","filteredContacts","normalizedFilter","toLowerCase","includes","list","map","item","contactInfo","onClick","App","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.14623033.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__1vmqn\",\"input\":\"Filter_input__1QO-n\",\"label\":\"Filter_label__FTCUg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__1Hl8k\",\"item\":\"ContactList_item__uHFnj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__1r00t\"};","import { v4 as uuidv4 } from \"uuid\";\r\nimport { createAction } from \"@reduxjs/toolkit\";\r\n\r\nexport const addContact = createAction(\"contacts/Add\", (contact) => ({\r\n  payload: {\r\n    contact: {\r\n      id: uuidv4(),\r\n      ...contact,\r\n    },\r\n  },\r\n}));\r\n\r\nexport const deleteContact = createAction(\"contacts/Delete\", (contactId) => ({\r\n  payload: { contactId },\r\n}));\r\n\r\nexport const filterChange = createAction(\"contacts/changeFilter\", (filter) => ({\r\n  payload: { filter },\r\n}));\r\n","import { combineReducers } from \"redux\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport { addContact, deleteContact, filterChange } from \"./contacts-actions\";\r\n\r\nconst items = createReducer([], {\r\n  [addContact]: (state, { payload }) => [...state, payload.contact],\r\n  [deleteContact]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload.contactId),\r\n});\r\n\r\nconst filter = createReducer(\"\", {\r\n  [filterChange]: (_, { payload }) => payload.filter,\r\n});\r\n\r\nconst contactReducer = combineReducers({\r\n  items,\r\n  filter,\r\n});\r\n\r\nexport { contactReducer };\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  REGISTER,\r\n  PURGE,\r\n} from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\nimport { contactReducer } from \"./contacts/contacts-reducer\";\r\n\r\nconst persistConfigContacts = {\r\n  key: \"contacts\",\r\n  storage,\r\n  blacklist: [\"filter\"],\r\n};\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: persistReducer(persistConfigContacts, contactReducer),\r\n  },\r\n  middleware: (getDefaultMiddleware) =>\r\n    getDefaultMiddleware({\r\n      serializableCheck: {\r\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n      },\r\n    }),\r\n  devTools: process.env.NODE_ENV === \"development\",\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default { store, persistor };\r\n","import PropTypes from \"prop-types\";\r\nimport s from \"./Container.module.css\";\r\n\r\nexport default function Container({ children }) {\r\n  return <div className={s.container}>{children}</div>;\r\n}\r\n\r\nContainer.propTypes = {\r\n  children: PropTypes.node,\r\n};\r\n","export const getContacts = (state) => state.contacts.items;\r\nexport const getFilter = (state) => state.contacts.filter;\r\n","import { useState } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { getContacts } from \"../../redux/contacts/contacts-selectors\";\r\nimport { addContact } from \"../../redux/contacts/contacts-actions\";\r\nimport s from \"./ContactForm.module.css\";\r\n\r\nexport default function ContactForm() {\r\n  const [name, setName] = useState(\"\");\r\n  const [number, setNumber] = useState(\"\");\r\n\r\n  const nameInputID = uuidv4();\r\n  const numberInputID = uuidv4();\r\n  const contacts = useSelector(getContacts);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.currentTarget;\r\n\r\n    name === \"name\" ? setName(value) : setNumber(value);\r\n  };\r\n\r\n  const resetState = () => {\r\n    setName(\"\");\r\n    setNumber(\"\");\r\n  };\r\n\r\n  function verifyDuplication() {\r\n    return contacts.find((contact) => contact.name === name);\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (verifyDuplication()) {\r\n      alert(`${name} is already in contacts.`);\r\n      return;\r\n    }\r\n\r\n    dispatch(addContact({ name, number }));\r\n    resetState();\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className={s.Form}>\r\n      <label htmlFor={nameInputID} className={s.label}>\r\n        Name\r\n      </label>\r\n      <input\r\n        className={s.input}\r\n        type=\"text\"\r\n        name=\"name\"\r\n        value={name}\r\n        id={nameInputID}\r\n        onChange={handleInputChange}\r\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n        required\r\n      />\r\n\r\n      <label htmlFor={numberInputID} className={s.label}>\r\n        Number\r\n      </label>\r\n      <input\r\n        className={s.input}\r\n        type=\"tel\"\r\n        name=\"number\"\r\n        value={number}\r\n        id={numberInputID}\r\n        onChange={handleInputChange}\r\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n        title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n        required\r\n      />\r\n      <button type=\"submit\" className=\"button\">\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n","import { v4 as uuidv4 } from \"uuid\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { filterChange } from \"../../redux/contacts/contacts-actions\";\r\nimport { getFilter } from \"../../redux/contacts/contacts-selectors\";\r\nimport s from \"./Filter.module.css\";\r\n\r\nexport default function Filter() {\r\n  const filter = useSelector(getFilter);\r\n  const dispatch = useDispatch();\r\n  const filterId = uuidv4();\r\n\r\n  return (\r\n    <div className={s.filter}>\r\n      <label className={s.label} htmlFor={filterId}>\r\n        Find contacts by name\r\n      </label>\r\n      <input\r\n        className={s.input}\r\n        type=\"text\"\r\n        value={filter}\r\n        id={filterId}\r\n        onChange={(e) => dispatch(filterChange(e.target.value))}\r\n      ></input>\r\n    </div>\r\n  );\r\n}\r\n","import s from \"./ContactList.module.css\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n  getContacts,\r\n  getFilter,\r\n} from \"../../redux/contacts/contacts-selectors\";\r\nimport { deleteContact } from \"../../redux/contacts/contacts-actions\";\r\n\r\nexport default function ContactList() {\r\n  const dispatch = useDispatch();\r\n\r\n  const getFilteredContacts = (state) => {\r\n    const contacts = getContacts(state);\r\n    const filter = getFilter(state);\r\n    const normalizedFilter = filter.toLowerCase();\r\n    return contacts.filter(({ name }) =>\r\n      name.toLowerCase().includes(normalizedFilter)\r\n    );\r\n  };\r\n\r\n  const filteredContacts = useSelector(getFilteredContacts);\r\n\r\n  return (\r\n    <ul className={s.list}>\r\n      {filteredContacts.map(({ name, id, number }) => (\r\n        <li className={s.item} key={id}>\r\n          <span className={s.contactInfo}>\r\n            {name}: {number}\r\n          </span>\r\n          <button\r\n            className=\"button\"\r\n            type=\"button\"\r\n            onClick={() => dispatch(deleteContact(id))}\r\n          >\r\n            Delete\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n","import Container from \"./components/Container\";\nimport ContactForm from \"./components/ContactForm\";\nimport Filter from \"./components/Filter\";\nimport ContactList from \"./components/ContactList\";\n\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Container>\n        <h1>Phonebook</h1>\n        <ContactForm />\n\n        <h2>Contacts</h2>\n        <Filter />\n        <ContactList />\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport store from \"./redux/store\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Form\":\"ContactForm_Form__okHYm\",\"label\":\"ContactForm_label__3ECIo\",\"input\":\"ContactForm_input__2XZm9\"};"],"sourceRoot":""}